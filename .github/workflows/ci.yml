name: CI

on:
  push:
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  run:
    runs-on: ${{ matrix.operating-system }}

    strategy:
      fail-fast: false
      matrix:
        operating-system: [ubuntu-latest]
        php-versions: ['8.2']
        wp-versions: ['latest']
        component:
          - wp-launchpad/core
          - wp-launchpad/dispatcher
          - wp-launchpad/uninstaller
          - wp-launchpad/updater

    name: ${{ matrix.component }} WP ${{ matrix.wp-versions }} with PHP ${{ matrix.php-versions }} on ${{ matrix.operating-system }}.

    env:
      WP_TESTS_DIR: "/tmp/tests/phpunit"
      WP_CORE_DIR: "/tmp/wordpress-develop"

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: ${{ matrix.php-versions }}
          coverage: xdebug
          tools: composer:v2, phpunit

      - name: Start mysql service
        run: sudo /etc/init.d/mysql start

      - name: Setup problem matchers for PHP
        run: echo "::add-matcher::${{ runner.tool_cache }}/php.json"

      - name: Setup problem matchers for PHPUnit
        run: echo "::add-matcher::${{ runner.tool_cache }}/phpunit.json"

      - name: Get composer cache directory
        id: composercache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache dependencies
        uses: actions/cache@v2
        with:
          path: ${{ steps.composercache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Run ${{ matrix.component }} install
        run: |
          composer global require soyuka/pmu
          composer global config allow-plugins.soyuka/pmu true --no-interaction
          composer global link . --permanent
          composer ${{matrix.component}} update

      - name: Require phpcov for coverage reporting
        run: composer ${{matrix.component}} require --dev --no-scripts phpunit/phpcov -W

      - name: Install ${{ matrix.component }} tests
        run: bash bin/install-wp-tests.sh wordpress_test root root 127.0.0.1:3306 ${{ matrix.wp-versions }}

      - name: Mysql8 auth plugin workaround
        run: sudo mysql -u root -proot -e "ALTER USER 'root'@'localhost' IDENTIFIED WITH mysql_native_password BY 'root';"

      - name: Test
        run: composer ${{ matrix.component }} run-tests